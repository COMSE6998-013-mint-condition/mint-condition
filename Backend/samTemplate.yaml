AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: CD Lambda Deployment for Mint Condition Project

Resources:
  # Ebay SDK Lambda Layer
  EbaySDKLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ebaysdk
      Description: "Ebay API SDK (Python)"
      ContentUri: ./lambda_layers/dependencies/ebaysdk_layer/
      CompatibleRuntimes:
        - python3.9
        - python3.8
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: python3.8
  ## Lambda to upload images
  MINTLF1:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: MINT_LF1_image_upload
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./lambda_functions/LF1_image_upload
      Description: 'CCBD Project: Lambda function for trading card upload'
      MemorySize: 128
      Timeout: 15
      Environment:
        Variables:
          os_pw : '{{resolve:secretsmanager:mint-condition-os-secrets:SecretString:os_pw}}'
          os_url : '{{resolve:secretsmanager:mint-condition-os-secrets:SecretString:os_url}}'
          os_username: '{{resolve:secretsmanager:mint-condition-os-secrets:SecretString:os_username}}'
          DB_HOST : '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_HOST}}'
          DB_USER : '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_USER}}'
          DB_PASSWORD: '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_PASSWORD}}'
          DB_PORT: '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_PORT}}'
          DB_DATABASE: '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_DATABASE}}'
          EBAY_PROD_CLIENT_ID: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_PROD_CLIENT_ID}}'
      Layers: 
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-PyMySQL:4
        - !Ref EbaySDKLayer
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-requests:25
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-lxml:7
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'
        - S3ReadPolicy:
            BucketName: mint-trading-cards
        - Statement:
          - Sid: SageMakerInvokeEndpointPolicy
            Effect: Allow
            Action:
            - sagemaker:InvokeEndpoint
            Resource: '*'
        
  ## Lambda to query sagemaker
  MINTLF2:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: MINT_LF2_ebay_cronjob
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./lambda_functions/LF2_ebay_cronjob
      Description: 'CCBD Project: Lambda function for trading card label prediction'
      MemorySize: 128
      Timeout: 15
      Layers: 
        - !Ref EbaySDKLayer
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-PyMySQL:4
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-requests:25
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-lxml:7
      Environment:
        Variables:
          DB_HOST : '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_HOST}}'
          DB_USER : '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_USER}}'
          DB_PASSWORD: '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_PASSWORD}}'
          DB_PORT: '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_PORT}}'
          DB_DATABASE: '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_DATABASE}}'
          EBAY_PROD_CLIENT_ID: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_PROD_CLIENT_ID}}'
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'
      Events:
        EbayPricingTrigger:
          Type: Schedule
          Properties:
            Schedule: cron(0,0 6 * * ? *) # CRON: 6 am UTC everyday 
  ## Lambda to query/update card
  MINTLF3:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: MINT_LF3_query_cards
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./lambda_functions/LF3_query_cards
      Description: 'CCBD Project: Lambda function for querying trading cards'
      MemorySize: 128
      Timeout: 15
      Layers:
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-PyMySQL:4
        - !Ref EbaySDKLayer
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-requests:25
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-lxml:7
      Environment:
        Variables:
          os_pw : '{{resolve:secretsmanager:mint-condition-os-secrets:SecretString:os_pw}}'
          os_url : '{{resolve:secretsmanager:mint-condition-os-secrets:SecretString:os_url}}'
          os_username: '{{resolve:secretsmanager:mint-condition-os-secrets:SecretString:os_username}}'
          DB_HOST : '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_HOST}}'
          DB_USER : '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_USER}}'
          DB_PASSWORD: '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_PASSWORD}}'
          DB_PORT: '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_PORT}}'
          DB_DATABASE: '{{resolve:secretsmanager:mint-condition-rds-secrets:SecretString:DB_DATABASE}}'
          EBAY_PROD_CLIENT_ID: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_PROD_CLIENT_ID}}'
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'
        - Statement:
            - Sid: SageMakerInvokeEndpointPolicy
              Effect: Allow
              Action:
                - sagemaker:InvokeEndpoint
              Resource: '*'

  ## Lambda for Ebay Account Deletion Notification: https://developer.ebay.com/marketplace-account-deletion#optingOut
  MINTLF4:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: MINT_LF4_ebay_notification
      Handler: index.handler
      Runtime: nodejs14.x
      CodeUri: ./lambda_functions/LF4_ebay_notification
      Description: 'CCBD Project: Lambda function for ebay notification'
      MemorySize: 128
      Timeout: 15
      Environment:
        Variables:
          EBAY_ENDPOINT: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_ENDPOINT}}'
          EBAY_PROD_CLIENT_ID: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_PROD_CLIENT_ID}}'
          EBAY_PROD_CLIENT_SECRET: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_PROD_CLIENT_SECRET}}'
          EBAY_PROD_DEV_ID: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_PROD_DEV_ID}}'
          EBAY_SANDBOX_CLIENT_ID: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_SANDBOX_CLIENT_ID}}'
          EBAY_SANDBOX_CLIENT_SECRET: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_SANDBOX_CLIENT_SECRET}}'
          EBAY_SANDBOX_DEV_ID: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_SANDBOX_DEV_ID}}'
          EBAY_VERIFICATION_TOKEN: '{{resolve:secretsmanager:ebay-prod-secrets:SecretString:EBAY_VERIFICATION_TOKEN}}'
      Layers:
         - arn:aws:lambda:us-east-1:958611120422:layer:event-notification-nodejs-sdk:1
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:ebay-prod-secrets-0LmKNp"